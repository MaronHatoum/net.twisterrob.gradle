body, html, svg {
	padding: 0;
	margin: 0;
	width: 100%;
	height: 100%;
}
svg {

}

#menu {
	position: absolute;
	bottom: 1em;
	left: 1em;
}
#legend-bg {
	fill: rgba(255,255,255,.7);
	rx: 10px;
	ry: 10px;
}
.node > rect {
	fill: rgba(0,0,0,.8);
	rx: 4px;
	ry: 4px;
	shape-rendering: crispEdges;
}
.node > text.label {
	fill: white;
	text-anchor: middle;
	alignment-baseline: central;
	font-size: 13px;
	font-family: sans-serif;
	letter-spacing: -1px;
}
.node > text.project {
	/*fill: black;*/
	/*font-style: italic;*/
	font-size: 7px;
	text-anchor: end;
	alignment-baseline: text-before-edge;
}
.link {
	stroke: black;
	stroke-width: 2px;
	stroke-antialiasing: true;
}

/* Cursor */
svg {
	/*cursor: none;*/
}
#cursor {
	fill: none;
	stroke: brown;
	pointer-events: none;
}

/* Node state styles */
.node > rect {
	stroke-width: 3px;
}
.node.leaf > text {
	/*font-size: 10px;*/
}
.node.straight > text {
	/*font-size: 10px;*/
}
/* Active on the UI, user clicked on it. */
.node.selected > rect {
	stroke-width: 8px;
}
.node.selected > text {
	text-decoration: underline;
	underline-thickness: 4;
}
.node:hover {
	filter: url(#negative);
}
.node:hover > text {
	
}
/* Task that came from nowhere, we don't know its state yet. */
.node.unknown > rect {
	fill: #CCC;
}
.node.unknown > text {
	fill: #999;
}
/* The user asked to run this task, all others are running because this depends on them. */
.node.requested > rect {
	fill: #FFF;
}
.node.requested > text {
	fill: #000;
}
/* The user explicitly wanted to no run this task. */
.node.excluded > rect {
	fill: #F8C;
}
.node.excluded > text {
	fill: #000;
}
/* Currently running task. */
.node.executing > rect {
	stroke: #FF0;
}
.node.executing:not(.requested) > text {
	fill: #FF0;
}
/* Already finished with some kind of result. */
.node.success > rect {
	stroke: #6A0;
}
.node.success > text {
	fill: #8F8;
}
/* ---- Execution results ---- */
.node.skipped > rect {
	fill: #A4D;
}
.node.skipped > text {
	fill: #FFF;
}
.node.uptodate > rect {
	stroke: #4AD;
}
.node.uptodate > text {
	fill: #AFF;
}
.node.failure > rect {
	fill: #F23;
}
.node.failure > text {
	fill: #FFF;
}
.node.nowork > rect {
	fill: #EB0;
}
.node.nowork > text {
	fill: #000;
}
